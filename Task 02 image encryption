from PIL import Image

def encrypt_image(image_path, output_path, key):
    # Open the image
    img = Image.open(image_path)
    pixels = img.load()  # Load pixel data
    
    # Encrypt each pixel
    for i in range(img.size[0]):
        for j in range(img.size[1]):
            r, g, b = pixels[i, j]
            # Simple encryption by adding the key to each color value
            pixels[i, j] = ((r + key) % 256, (g + key) % 256, (b + key) % 256)
    
    # Save the encrypted image
    img.save(output_path)
    print(f"Image encrypted and saved as {output_path}")

def decrypt_image(image_path, output_path, key):
    # Open the image
    img = Image.open(image_path)
    pixels = img.load()  # Load pixel data
    
    # Decrypt each pixel
    for i in range(img.size[0]):
        for j in range(img.size[1]):
            r, g, b = pixels[i, j]
            # Simple decryption by subtracting the key from each color value
            pixels[i, j] = ((r - key) % 256, (g - key) % 256, (b - key) % 256)
    
    # Save the decrypted image
    img.save(output_path)
    print(f"Image decrypted and saved as {output_path}")

# User inputs
mode = input("Type 'encrypt' to encrypt or 'decrypt' to decrypt: ").lower()
image_path = input("Enter the path of the image: ")
output_path = input("Enter the path for the output image: ")
key = int(input("Enter the encryption/decryption key (integer): "))

# Perform the chosen operation
if mode == 'encrypt':
    encrypt_image(image_path, output_path, key)
    encrypt_image(image_path, output_path, key)
elif mode == 'decrypt':
    decrypt_image(image_path, output_path, key)
else:
    print("Invalid mode selected. Please choose 'encrypt' or 'decrypt'.")
